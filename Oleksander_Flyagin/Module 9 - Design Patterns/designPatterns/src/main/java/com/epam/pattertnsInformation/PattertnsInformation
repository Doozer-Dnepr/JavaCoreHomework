Singleton

Паттерн Singleton гарантирует, что у класса есть только один экземпляр, и предоставляет к нему глобальную точку доступа.


Область применения
1.) В системе должно существовать не более одного экземпляра заданного класса.
2.) Экземпляр должен быть легко доступен для всех клиентов данного класса.
3.) Создание объекта on demand, то есть, когда он понадобится первый раз, а не во время инициализации системы.

Примеры:
Логирование, обращение к файлам хранящих конфигурационные параметры, подключение к базе данных,
ведение отладочного файла для приложения.


Abstract Factory

Паттерн Abstract Factory  обеспечивает создание семейств взаимосвязанных или зависящих друг от друга
объектов без указания их конкретных классов.

Область применения
 1.) система не должна зависеть от способа создания и реализации входящих в нее объектов;
 2.) система работает с семействами объектов;
 3.) входящие в семейство объекты должны использоваться совместно.

Примеры:
В случае многоплатформного графического приложения для перехода на новую платформу, то есть для замены графических элементов
(кнопок, меню, полос прокрутки).
В случае многослойной карты, для отображения разных слоёв карты (спутник, обычная, 3D)


Builder

Паттерн Builder позволяет отделить процесс создания сложного объекта от его реализации.
При этом, результатом одних и тех же операций могут быть различные объекты.

Область применения
 1.) процесс создания объекта можно разделить на части (шаги);
 2.) алгоритм этого процесса не должен зависеть от того, из каких частей состоит объект;
 3.) конструирование должно обеспечивать возможность создавать различные объекты.

Примеры:
В случае создания объекта, не заполняя все его поля (база данных, отсутствие номера квартиры / этажа, так как это частный дом).

Strategy
Суть паттерна Strategy  состоит в том, чтобы создать несколько моделей поведения (стратегий) для одного объекта и вынести
их в отдельные классы.

Область применения
1.)необходимость выбирать модель поведения объекта динамически;
2.)упрощает процесс добавления новых стратегий;
3.)является альтернативой наследованию;

Примеры:
В зависимости от типа выбранной стратегии используется  алгоритм шифрования
С помощью паттерна можно подключать к разным видам баз данных(MySQL, H2, MSSQL).