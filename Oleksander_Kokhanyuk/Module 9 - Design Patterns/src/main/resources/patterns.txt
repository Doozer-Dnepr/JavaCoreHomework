Design Patterns

1. Singleton

Используется когда необходимо создать объект класса таким образом, чтобы 
гарантировать невозможность  инициализации  другого  объекта  того  же  класса. 
Сам класс контролирует наличие единственного экземпляра и он же предоставляет 
при необходимости к нему доступ. 


2. Abstract Factory

Используется когда необходимо создавать объекты классов, не имеющих иерархической связи, 
но логически связанных между собой. Абстрактный класс-фабрика определяет 
общий интерфейс таких фабрик. Его подклассы обладают конкретной реализацией
методов по созданию разных объектов.


3. Builder

Шаблон Builder можно применять когда заранее известен тип обьекта, но сам объект 
является сложным или имеет сложный процесс конструирования. В таком случае, для 
упрощения процесса создания объекта отдельно реализуется процесс инициализации,
а детали построения объекта или его частей определяются в подклассах.  


4. Srtategy

Шаблон Strategy используется когда необходимо определить семейство родственных 
алгоритмов, инкапсулировать каждый из них и сделать их взаимозаменяемыми. 
Стратегия позволяет изменять  алгоритмы  независимо  от  клиентов,  которые  
ими  пользуются. Алгоритмы  решают  близкие  задачи  и  обладают  идентичным  интерфейсом. 
Отличия начинаются только в реализации. К примерам таких задач относятся 
алгоритмы сортировки, поиска, архивирования, кодирования, генерации случайных чисел и прочих.
